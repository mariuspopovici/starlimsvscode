openapi: 3.0.1
tags:
  - name: Code Management
info:
  title: STARLIMS VSCode Extension API
  version: "1.2.0"
  description: STARLIMS VSCode Extension API services.
  contact:
    name: API Support
    email: marius@popovici.net
servers:
  - url: https://server/starlimsapp/
security:
  - starlims-user: []
  - starlims-password: []

paths:
  /SCM.API.Add.lims:
    post:
      tags:
        - "Code Management"
      description: The `SCM_API.Add.lims` endpoint adds a new code item to the dictionary.
      operationId: Add
      requestBody:
        description: Add item request object.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddItemRequest"
        required: true
      responses:
        "200":
          description: The add operation response (success status and error or success message).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddItemResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM.API.GetLanguages.lims:        
    get:
      tags:
        - "Code Management"
      description: The `SCM_API.GetLanguages.lims` endpoint returns the list of system languages.
      operationId: GetLanguages
      responses:
        "200":
          description: A list of supported code languages.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLanguagesResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM.API.Delete.lims:
    get:
      tags:
        - "Code Management"
      description: The `SCM_API.Delete.lims` endpoint deletes an item from the dictionary.
      operationId: Delete
      parameters:
        - in: query
          name: URI
          schema:
            type: string
          description: The URI indicating the code item to delete.
          example: /Applications/TestApplications/MyApp/ServerScripts/Script1
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: The operation response (success status and error or success message).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.Search.lims:
    get:
      tags:
        - "Code Management"
      description: The `SCM_API.Search.lims` endpoint searches code items matching the provided item name search string
      operationId: Search
      parameters:
        - in: query
          name: itemName
          schema:
            type: string
          description: The search string used to find code items
          example: getFolders
          required: true
      responses:
        "200":
          description: The search operation response (success status and error or search results).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.ClearLog.lims:
    get:
      tags:
        - "Code Management"
      description: The `SCM_API.ClearLog.lims` endpoint clears the content of the server log for the specified user.
      operationId: ClearLog
      parameters:
        - in: query
          name: User
          schema:
            type: string
          description: The user ID of the STARLIMS user.
          example: SYSADM
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: The operation response (success status and error or success message).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClearLogResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.CheckOut.lims:
    get:
      tags:
        - "Code Management"
      description: The `SCM_API.CheckOut.lims` endpoint checks out the item at the specified URI.
      operationId: CheckOut
      parameters:
        - in: query
          name: URI
          schema:
            type: string
          description: The URI indicating the code item to check out.
          example: /Applications/TestApplications/MyApp/ServerScripts/Script1
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: The operation response (success status and error or success message).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckOutResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.CheckIn.lims:
    get:
      tags:
        - "Code Management"
      description: The `SCM_API.CheckIn.lims` endpoint checks in the item at the specified URI.
      operationId: CheckIn
      parameters:
        - in: query
          name: URI
          schema:
            type: string
          description: The URI indicating the code item to check in.
          example: /Applications/TestApplications/MyApp/ServerScripts/Script1
          required: true
        - in: query
          name: Reason
          schema:
            type: string
          description: The check in reason.
          example: Checked in bug fix.
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: The operation response (success status and error or success message).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckInResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.CheckInAll.lims:
    get:
      tags:
        - "Code Management"
      description: The `SCM_API.CheckInAll.lims` endpoint checks in the item at the specified URI.
      operationId: CheckInAll
      parameters:
        - in: query
          name: AllUsers
          schema:
            type: boolean
          description: Set to `true` to check in all items checked out by all users.
          example: true
          required: false
        - in: query
          name: Reason
          schema:
            type: string
          description: The check in reason.
          example: Checked in bug fix.
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: The operation response (success status and error or success message).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckInResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"          
  /SCM_API.SaveCode.lims:
    post:
      tags:
        - "Code Management"
      description: The `SCM_API.SaveCode.lims` endpoint saves the code at the specified URI and returns the result.
      operationId: SaveCode
      requestBody:
        description: Save code script request object.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaveCodeRequest"
        required: true
      responses:
        "200":
          description: The save operation response (success status and error or success message).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveCodeResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.RunScript.lims:
    post:
      tags:
        - "Code Management"
      description: The `SCM_API.RunScript.lims` endpoint executes the code referenced by the specified URI and returns the result.
      operationId: RunScript
      requestBody:
        description: Run script request object.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunScriptRequest"
        required: true
      responses:
        "200":
          description: The execution result stats and return value.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunScriptResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.GetCode.lims:
    get:
      tags:
        - "Code Management"
      description: |
        The `SCM_API.GetCode.lims` endpoint returns code refererenced by the specified URI path.
      operationId: GetCode
      parameters:
        - in: query
          name: URI
          schema:
            type: string
          description: The URI indicating the code item to retrieve.
          example: /Applications/TestApplications/MyApp
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: The code text and code language of the requested item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodeResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.GetItemGUID.lims:
    get:
      tags:
        - "Code Management"
      description: |
        The `SCM_API.GetItemGUID.lims` endpoint returns the GUID of the item refererenced in the specified URI path.
      operationId: GetItemGUID
      parameters:
        - in: query
          name: URI
          schema:
            type: string
          description: The URI indicating the code item to retrieve.
          example: /Applications/TestApplications/MyApp/HTML Forms/Form1
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: The GUID of the requested item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GUIDResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.Version.lims:
    get:
      tags:
        - "Extension Management"
      description: |
        The `SCM_API.Version.lims` endpoint returns the STARLIMS VS Code API version number.
      responses:
        "200":
          description: The current version number installed on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.ImportPackage.lims:
    post:
      tags:
        - "Code Management"
      description: The `SCM_API.ImportPackage.lims` endpoint imports / deploys a STARLIMS .sdp package.
      operationId: ImportPackage
      requestBody:
        description: The package binary content.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: The import success status and import log contents.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportPackageResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.GetEnterpriseItems.lims:
    get:
      tags:
        - "Code Management"
      description: |
        The SCM_API.GetEnterpriseItems.lims endpoint returns the STARLIMS dictionary code tree from a specified URI.
      operationId: GetEnterpriseItems
      parameters:
        - in: query
          name: URI
          schema:
            type: string
          description: The URI indicating the start point from which to retrieve STARLIMS enterprise items.
          example: /Applications/TestApplications/MyApp
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: A collection of enterprise code items.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnterpriseItemList"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.GetCheckedOutItems.lims:
    get:
      tags:
        - "Code Management"
      description: The `SCM_API.GetCheckedOutItems.lims` endpoint returns and XML dataset with a list of checked out code items.
      operationId: GetCheckedOutItems
      parameters:
        - in: query
          name: allUsers
          schema:
            type: string
          description: Set to ```true``` when requesting checked out items from all users
          example: true
          required: false
      responses:
        "200":
          description: The operation response (success status and error or results).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckedOutItemsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.TableDefinition.lims:
    get:
      tags:
        - "Code Management"
      description: |
        The `SCM_API.TableDefinition.lims` endpoint returns table schema information for the table in the specified URI path.
      operationId: TableDefinition
      parameters:
        - in: query
          name: URI
          schema:
            type: string
          description: The URI indicating the table item to retrieve.
          example: /Tables/Database/FOLDERS
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: |
            The schema definition of the requested item.
            An array of arrays with the following column structure:
              ["Field Name", "Caption", "Data Type", "Field Size", "Allow Nulls", "Default", "Notes", "Sorter"]

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableDefinitionResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"

  /SCM_API.TableCommand.lims:
    get:
      tags:
        - "Code Management"
      description: |
        The `SCM_API.TableCommand.lims` endpoint returns SQL statements for SELECT, DELETE, UPDATE, INSERT operations on the specified table.
      operationId: TableCommand
      parameters:
        - in: query
          name: URI
          schema:
            type: string
          description: The URI indicating the table item.
          example: /Tables/Database/FOLDERS
          required: true
        - in: query
          name: CommandType
          schema:
            type: string
            enum:
              - SELECT, DELETE, UPDATE, INSERT
          description: The SQL command type.
          example: SELECT
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: A SQL command for the specified operation type.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableCommandResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /SCM_API.GlobalSearch.lims:
    get:
      tags:
        - "Code Management"
      description: |
        The `SCM_API.GlobalSearch.lims` endpoint executes a full text search using the provided search term.
      operationId: GlobalSearch
      parameters:
        - in: query
          name: SearchString
          schema:
            type: string
          description: The search criteria or term.
          example: SqlExecute("update FOLDERS
          required: true
        - in: query
          name: ItemTypes
          schema:
            type: string
          description: A comma separated string of item types (ALL, FORMCODEBEHIND, APPCS, APPSS, APPDS, GLBSS, GLBDS, GLBCS)
          example: APPSS,GLBSS
          required: true
        - in: header
          name: Content-Type
          required: true
          description: Content-Type header must be set to `application/json`
          schema:
            type: string
            pattern: ^application/json$
          example: application/json
      responses:
        "200":
          description: An array of EnterpriseItem objects where the code contains the specified search term.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnterpriseItemList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
components:
  schemas:
    Response:
      required:
        - success
        - data
      type: object
      properties:
        Success:
          type: boolean
        Result:
          type: string
    TableCommandResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: string
          example: select ORIGREC, FOLDERNO from FOLDERS where FOLDERNO=?
    CheckedOutItemsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: string
    SearchResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/SearchItem"
    SearchItem:
      type: object
      properties:
        name:
          type: string
          example: /Applications/ClientRelations/CLIENT_PROJECT/DataSources/GetFolders.sql
        type:
          type: string
          example: APPDS
        checkedOutBy:
          type: string
          example: SYSADM
        language:
          type: string
          example: SQL
        isFolder:
          type: boolean
          example: false
        guid:
          type: string
          example: A8C3D515-48A6-E040-AC7A-8617E5DE0FC7
    GetLanguagesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            type: array
            items:
              type: string
              example: [["ENG", "English"], ["FR", "French"], ["GER", "German"]]
    ClearLogResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          example:
          description: empty string if successful or an error message otherwise.
    SaveCodeRequest:
      required:
        - URI
        - Code
      properties:
        URI:
          type: string
          example: "/ServerScripts/Test/TestServerScript"
          description: The URI to the item to save.
        Code:
          type: string
          description: The item code
          example: |
            :RETURN 1+1;
    SaveCodeResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          example: Done
          description: Done if successful or an error message otherwise.
    CheckInResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          example: null
          description: Empty if successful or an error message otherwise.
    DeleteResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          example: null
          description: Empty if successful or an error message otherwise.
    CheckOutResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          example: null
          description: Empty if successful or an error message otherwise.
    AddItemRequest:
      type: object
      required:
        - ItemName, ItemType, Language, Category, AppName
      properties:
        ItemName:
          description: The item name e.g. the server script name
          type: string
          example: NewScript
        ItemType:
          description: The type of code item (application category, application, application server scritpt, etc.)
          type: string
          enum:
            - APPCAT
            - APP
            - APPSS
            - HTMLFORMXML
            - XFDFORMXML
            - APPDS
            - SSCAT
            - SS
            - DSCAT
            - CSCAT
            - DS
            - CS
          example: APPSS
        Language:
          description: The code item language e.g. STARLIMS Scripting Language or JavaScript
          type: string
          enum:
            - SSL
            - JS
          example: SSL
        Category:
          type: string
          description: Code item category name
          example: ClinicalApplications
        AppName:
          type: string
          description: Application name
          example: ClinicalLogin
    AddItemResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          description: A success confirmation message or an error description.
    RunScriptRequest:
      required:
        - URI
      properties:
        URI:
          type: string
          example: "/ServerScripts/Test/TestServerScript"
          description: The URI to the script or data source to execute.
        Parameters:
          type: array
          description: Optional script parameters.
          items:
            type: object
          example: ["P1 Value", "P2 Value"]
    RunScriptResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          description: The return value of the remote script execution.
    GUIDResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          description: The code item GUID.
          example: 517ff7dd-e2e9-4896-a7c4-a6b38feb2c03
    VersionResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          description: The API version number.
          example: 1.2.49
    ImportPackageResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
          description: The import package log output.
    CodeResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            code:
              type: string
              description: Item code text.
              example: |
                :RETURN .T.;
            language:
              type: string
              description: |
                Item code programming language. One of: SSL, JS, SLSQL, XML
              example: SSL
              enum:
                - SSL
                - JS
                - XML
                - SLSQL
    TableDefinitionResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            type: array
            items:
              type: string
    EnterpriseItemList:
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/EnterpriseItem"
    EnterpriseItem:
      type: object
      properties:
        name:
          type: string
          description: The name of the code item.
          example: TestServerScript
        type:
          type: string
          description: |
            The type of item. One of: CATEGORY, APPCATEGORY, APPCS, APPDS, APPSS, APP, CSCAT, DSCAT, SSCAT, CS, DS, SS
          example: SS
          enum:
            - CATEGORY
            - APPCATEGORY
            - SSCAT
            - CSCAT
            - DSCAT
            - APP
            - APPCS
            - APPDS
            - APPSS
            - SS
            - CS
            - DS
        uri:
          type: string
          example: /ServerScripts/Test/TestServerScript
          description: The URI of the code item
        checkedOutBy:
          type: string
          example: MARIUS
          description: The user ID who has the item checked out if item is currently checked out
        scriptLanguage:
          type: string
          example: SSL
          description: |
            The programming language of the item. One of: SSL, JS, XML, SQL
          enum:
            - SSL
            - JS
            - XML
            - SQL
            - JSON
        language:
          type: string
          example: ENG
          description: The language of the item, e.g. ENG for English, GER for German, etc.
        isFolder:
          type: boolean
          example: false
          description: Set to `true` when item is a category / folder type such as an Application, Application Category, Script Category etc.
        guid:
          type: string
          example: 12345678-1234-1234-1234-123456789012
          description: The item GUID, only set for HTML forms so far.
        version: 
          type: string
          example: 1.0.0
          description: The version of the code item
  responses:
    OK:
      description: Operation ran successfully.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Response"
          example:
            success: true
            data: Success
    BadRequest:
      description: Invalid input. Actual validation error message depends on context.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Response"
          example:
            success: false
            data: Bad request.
    InternalError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Response"
          example:
            Success: false
            Result: Internal server error.
  securitySchemes:
    starlims-user:
      type: apiKey
      description: |
        The STARLIMS username.
      name: STARLIMSUser
      in: header
    starlims-password:
      type: apiKey
      description: |
        The STARLIMS user password.
      name: STARLIMSPass
      in: header
