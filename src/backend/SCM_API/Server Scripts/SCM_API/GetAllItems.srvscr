/******************************************************************************
Description.. :	Load the whole enterprise tree at once
Author....... :	DC
Date......... : 2023-08-09
*******************************************************************************/;
:DECLARE sSQL, aItems, oResult, oUtils, nLayerID;
oUtils := CreateUDObject("SCM_API.Utils", {});
oResponse := CreateUDObject({
	{"success", .F.},
	{"data", NIL}
});

nLayerID := GetSystemLayerId();

sSQL := "select * from
(select
f.DISPLAYTEXT as name,
case f.FORMTYPE
	when 'XFD' then 'XFDFORMCODE'
	when 'HTML' then 'HTMLFORMCODE'
	when 'PHONE' then 'PHONEFORMCODE'
	when 'TABLET' then 'TABLETFORMCODE'
end as type,
case f.FORMTYPE
	when 'XFD' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/XFDForms/CodeBehind/' + f.DISPLAYTEXT
	when 'HTML' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/HTMLForms/CodeBehind/' + f.DISPLAYTEXT
	when 'PHONE' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/PhoneForms/CodeBehind/' + f.DISPLAYTEXT
	when 'TABLET' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/TabletForms/CodeBehind/' + f.DISPLAYTEXT
end as uri,
f.CHECKEDOUTBY as checkedOutBy,
'JS' as language,
'N' as isFolder,
f.FORMID as guid
from LIMSXFDFORMS f
join LIMSAPPLICATIONS a on a.APPID = f.APPID
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
where f.LAYERID = ?nLayerID?

union

select
f.DISPLAYTEXT as name,
case f.FORMTYPE
	when 'XFD' then 'XFDFORMXML'
	when 'HTML' then 'HTMLFORMXML'
	when 'PHONE' then 'PHONEFORMXML'
	when 'TABLET' then 'TABLETFORMXML'
end as type,
case f.FORMTYPE
	when 'XFD' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/XFDForms/XML/' + f.DISPLAYTEXT
	when 'HTML' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/HTMLForms/XML/' + f.DISPLAYTEXT
	when 'PHONE' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/PhoneForms/XML/' + f.DISPLAYTEXT
	when 'TABLET' then '/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/TabletForms/XML/' + f.DISPLAYTEXT
end as uri,
f.CHECKEDOUTBY as checkedOutBy,
'XML' as language,
'N' as isFolder,
f.FORMID as guid
from LIMSXFDFORMS f
join LIMSAPPLICATIONS a on a.APPID = f.APPID
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
where f.LAYERID = ?nLayerID?

union

select
f.DISPLAYTEXT as name,
'HTMLFORMGUIDE' as type,
'/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/HTMLForms/Guide/' + f.DISPLAYTEXT as uri,
f.CHECKEDOUTBY as checkedOutBy,
'JSON' as language,
'N' as isFolder,
f.FORMID as guid
from LIMSXFDFORMS f
join LIMSAPPLICATIONS a on a.APPID = f.APPID
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
where f.FORMTYPE = 'HTML'
and f.LAYERID = ?nLayerID?

union

select
s.DISPLAYTEXT as name, 
'APPSS' as type,
'/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/ServerScripts/' + s.DISPLAYTEXT as URI,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder,
s.SCRIPTID as guid
from LIMSAPPLICATIONS a
join LIMSAPPSERVERSCRIPTS aps on aps.APPID = a.APPID
join LIMSSERVERSCRIPTS s on s.SCRIPTID = aps.SCRIPTID
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
where s.LAYERID = ?nLayerID?

union

select
s.DISPLAYTEXT as name,
'APPCS' as type,
'/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/ClientScripts/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder,
s.SCRIPTID as guid
from LIMSAPPLICATIONS a
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
join LIMSAPPCLIENTSCRIPTS apc on apc.APPID = a.APPID
join LIMSCLIENTSCRIPTS s on s.SCRIPTID = apc.SCRIPTID
where s.LAYERID = ?nLayerID?

union

select
s.DISPLAYTEXT as name, 
'APPDS' as type,
'/Applications/' + c.DISPLAYTEXT + '/' + a.DISPLAYTEXT + '/DataSources/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder,
s.DATASOURCEID as guid
from LIMSAPPLICATIONS a
join LIMSAPPCATEGORIES c on c.CATEGORYID = a.CATEGORYID
join LIMSAPPDATASOURCES aps on aps.APPID = a.APPID
join LIMSDATASOURCES s on s.DATASOURCEID = aps.DATASOURCEID
where s.LAYERID = ?nLayerID?

union

select
s.DISPLAYTEXT as name,
'SS' as type,
'/ServerScripts/' + c.DISPLAYTEXT + '/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder,
s.SCRIPTID as guid
from LIMSSERVERSCRIPTCATEGORIES c
join LIMSSERVERSCRIPTS s on s.CATEGORYID = c.CATEGORYID
left join LIMSAPPSERVERSCRIPTS aps on aps.SCRIPTID = s.SCRIPTID
where aps.SCRIPTID is null
and s.LAYERID = ?nLayerID?

union

select
s.DISPLAYTEXT as name,
'DS' as type,
'/DataSources/' + c.DISPLAYTEXT + '/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder,
s.DATASOURCEID as guid
from LIMSDATASOURCECATEGORIES c
join LIMSDATASOURCES s on s.CATEGORYID = c.CATEGORYID
left join LIMSAPPDATASOURCES aps on aps.DATASOURCEID = s.DATASOURCEID
where aps.DATASOURCEID is null
and s.LAYERID = ?nLayerID?

union

select
s.DISPLAYTEXT as name,
'CS' as type,
'/ClientScripts/' + c.DISPLAYTEXT + '/' + s.DISPLAYTEXT as uri,
s.CHECKEDOUTBY as checkedOutBy,
s.SCRIPTLANGUAGE as language,
'N' as isFolder,
s.SCRIPTID as guid
from LIMSCLIENTSCRIPTCATEGORIES c
join LIMSCLIENTSCRIPTS s on s.CATEGORYID = c.CATEGORYID
left join LIMSAPPCLIENTSCRIPTS aps on aps.SCRIPTID = s.SCRIPTID
where aps.SCRIPTID is null
and s.LAYERID = ?nLayerID?

union

select
TABLENAME as name,
'TABLE' as type,
'/Tables/Dictionary/' + TABLENAME as uri,
CHECKEDOUTBY as checkedOutBy,
'' as language,
'N' as isFolder,
TABLEID as guid
from LIMSTABLES
where upper(ISSYSTEM) = 'Y' 
and TABLENAME not like 'LIMS%'
and LAYERID = ?nLayerID?

union

select
TABLENAME as name,
'TABLE' as type,
'/Tables/Database/' + TABLENAME as uri,
CHECKEDOUTBY as checkedOutBy,
'' as language,
'N' as isFolder,
TABLEID as guid
from LIMSTABLES
where upper(ISSYSTEM) = 'N'
and TABLENAME not like 'LIMS%'
and LAYERID = ?nLayerID?

) t order by REPLACE(REPLACE(REPLACE(REPLACE(t.uri, '/HTMLForms', ''), '/XML', ''), '/Guide', ''), '/CodeBehind', ''), t.name";

aItems := SQLexecute(sSQL, "Dictionary");

:DECLARE i, aResultItems, sLanguage;
aResultItems := {};
:FOR i:=1 :TO Len(aItems);
	sLanguage := aItems[i][5];
	
	:IF Upper(sLanguage) = "STARLIMS";
			sLanguage := "SSL";
	:ENDIF;
	:IF Upper(sLanguage) = "JSCRIPT";
			sLanguage := "JS";
	:ENDIF;

	oItem := oUtils:RemoveDBNull(CreateUDObject({
		{"name", aItems[i][3] + '.' + Lower(sLanguage)},
		{"type", aItems[i][2]},
		{"uri", aItems[i][3]},
		{"checkedOutBy", aItems[i][4]},
		{"language", sLanguage},
		{"isFolder", .F.},
		{"guid", aItems[i][7]}
	}));
	AAdd(aResultItems, oItem);
:NEXT;

oResult := CreateUDObject({
	{"success", .T.},
	{"data", CreateUDObject({{"items", aResultItems}})}
});

Response:StatusCode := 200;
:RETURN oResult;